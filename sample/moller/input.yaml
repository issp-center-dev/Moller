name: testjob
description: Sample task file

platform:
  system:  ohtaka
  queue:   i8cpu
  node:    8
  elapsed: 00:30:00

prologue:
  code: |
    module purge
    module load oneapi_compiler/2023.0.0 openmpi/4.1.5-oneapi-2023.0.0-classic

    ulimit -s unlimited

    source /home/issp/materiapps/intel/parallel/parallelvars-20210622-1.sh
    source /home/issp/materiapps/oneapi_compiler_classic-2023.0.0--openmpi-4.1.5/espresso/espressovars-7.2-1.sh

    source ~/misc/miniconda3/env.sh
    conda activate py39-moller

    #PATH_W90="/home/i0016/i001600/program/q-e6.6/bin"
    export PATH_TOML=$(pwd)
    export cif2qewan="/home/i0018/i001800/tools/moller/tools/cif2qewan.git/cif2qewan.py"
    export CIF2QEWAN_DIR="/home/i0018/i001800/tools/moller/tools/cif2qewan.git"

    # Option to use dual rail
    #export MPI_IB_RAILS=2

    #MKL_DEBUG_CPU_TYPE=5
    ulimit -s unlimited
    export KMP_STACKSIZE=512m
    export UCX_TLS='self,sm,ud'

epilogue:
  code: |
    echo "done."

jobs:
  start:
    parallel: false
    run: |
      echo "start..."
  cif2qe:
    description: cif2qe
    run: |
      if [ -d qe ]; then
        if [ -d qe_old ]; then
          echo "qe_old dir exists in $_workdir. remove qe_old"
          rm -rf qe_old
        fi
        echo "qe dir exists in $_workdir. mv qe qe_old"
        mv qe qe_old
      fi
      mkdir qe
      cp *.cif qe
      cd qe
      srun python3 ${cif2qewan} *.cif ${PATH_TOML}/cif2qewan.toml
  scf:
    description: SCF
    node: [24,4]
    run: |
      cd qe
      srun pw.x -nk 24 -in scf.in > scf.out
  copy_work:
    description: copy work directory
    run: |
      cd qe
      cp -r work check_wannier
      cp -r work band
  nscf:
    description: NSCF for check Wannier
    node: [64,2]
    run: |
      cd qe/check_wannier
      sed -e "s/electrons/electrons\n  diagonalization = 'cg'/g" nscf.in > nscf_cg.in
      srun pw.x -nk 64 -in nscf_cg.in > nscf.out
  band:
    description: Band for check Wannier
    node: [64,2]
    run: |
      cd qe/band
      sed -e "s/electrons/electrons\n  diagonalization = 'cg'/g" nscf.in > nscf_cg.in
      srun pw.x -nk 64 -in nscf_cg.in > nscf.out
      srun bands.x -nk 64 -in band.in > band.out
  nscf2:
    description: NSCF
    node: [64,2]
    run: |
      cd qe
      sed -e "s/electrons/electrons\n  diagonalization = 'cg'/g" nscf.in > nscf_cg.in
      srun pw.x -nk 64 -in nscf_cg.in > nscf_cg.out
